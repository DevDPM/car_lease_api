<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>nl.sogeti.gatewayapi</groupId>
    <artifactId>gatewayapi</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <compiler-plugin.version>3.13.0</compiler-plugin.version>
        <maven.compiler.release>21</maven.compiler.release>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>
        <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>
        <quarkus.platform.version>3.16.1</quarkus.platform.version>
        <skipITs>true</skipITs>
        <surefire-plugin.version>3.5.0</surefire-plugin.version>
        <mapstruct.version>1.6.2</mapstruct.version>
        <lombok.version>1.18.34</lombok.version>
        <lombok-mapstruct-bindin.version>0.2.0</lombok-mapstruct-bindin.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>${quarkus.platform.group-id}</groupId>
                <artifactId>${quarkus.platform.artifact-id}</artifactId>
                <version>${quarkus.platform.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- API specific dependencies -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- Quarkus specific dependencies -->
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-resteasy-jackson</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-resteasy</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-smallrye-jwt</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-smallrye-jwt-build</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-arc</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-config-yaml</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-resteasy-client-jackson</artifactId>
        </dependency>

        <!-- Test -->
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-junit5</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-junit5-mockito</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-test-security-jwt</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>${quarkus.platform.group-id}</groupId>
                <artifactId>quarkus-maven-plugin</artifactId>
                <version>${quarkus.platform.version}</version>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <goals>
                            <goal>build</goal>
                            <goal>generate-code</goal>
                            <goal>generate-code-tests</goal>
                            <goal>native-image-agent</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${compiler-plugin.version}</version>
                <configuration>
                    <parameters>true</parameters>
                    <release>${maven.compiler.release}</release>

                    <showWarnings>true</showWarnings>
                    <compilerArgs>
                        <arg>-parameters</arg>
                    </compilerArgs>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${surefire-plugin.version}</version>
                <configuration>
                    <systemPropertyVariables>
                        <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                        <maven.home>${maven.home}</maven.home>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${surefire-plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <systemPropertyVariables>
                        <native.image.path>${project.build.directory}/${project.build.finalName}-runner
                        </native.image.path>
                        <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                        <maven.home>${maven.home}</maven.home>
                    </systemPropertyVariables>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <version>7.9.0</version>
                <executions>
                    <execution>
                        <id>generate API resource and DTO</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <generatorName>jaxrs-spec</generatorName>
                            <generateModels>true</generateModels>
                            <generateApis>true</generateApis>
                            <generateSupportingFiles>false</generateSupportingFiles>
                            <generateApiTests>false</generateApiTests>
                            <generateModelTests>false</generateModelTests>
                            <inputSpec>${project.basedir}/src/main/resources/gateway-api-contract.yaml</inputSpec>
                            <modelNameSuffix>Dto</modelNameSuffix>
                            <configOptions>
                                <returnResponse>true</returnResponse>
                                <interfaceOnly>true</interfaceOnly>
                                <apiPackage>nl.sogeti.gatewayapi.resource</apiPackage>
                                <modelPackage>nl.sogeti.gatewayapi.dto</modelPackage>
                                <openApiNullable>false</openApiNullable>
                                <sourceFolder>src/gen/main/java</sourceFolder>
                                <useJakartaEe>true</useJakartaEe>
                                <useSwaggerAnnotations>false</useSwaggerAnnotations>
                            </configOptions>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generate rest client dto customer </id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <generatorName>java</generatorName>
                            <library>microprofile</library>
                            <modelPackage>true</modelPackage>
                            <generateApis>false</generateApis> <!-- Jakarta config not working, Create client/dto's manually -->
                            <generateSupportingFiles>true</generateSupportingFiles>
                            <generateApiTests>false</generateApiTests>
                            <generateModelTests>false</generateModelTests>
                            <inputSpec>../customerservice/src/main/resources/customer-service-contract.yaml</inputSpec>
                            <configOptions>
                                <serializationLibrary>jackson</serializationLibrary>
                                <useJakartaEe>true</useJakartaEe> <!-- Jakarta config not working, Create client/dto's manually -->
                                <interfaceOnly>false</interfaceOnly>
                                <serializableModel>true</serializableModel>
                                <sourceFolder>src/gen/main/java</sourceFolder>
                                <modelPackage>nl.sogeti.gatewayapi.di.customerservice.dto</modelPackage>
<!--                                <apiPackage>nl.sogeti.gatewayapi.di.customerservice.client</apiPackage>-->
                            </configOptions>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generate rest client dto cars</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <generatorName>java</generatorName>
                            <library>microprofile</library>
                            <modelPackage>true</modelPackage>
                            <generateApis>false</generateApis> <!-- Jakarta config not working, Create client/dto's manually -->
                            <generateSupportingFiles>true</generateSupportingFiles>
                            <generateApiTests>false</generateApiTests>
                            <generateModelTests>false</generateModelTests>
                            <inputSpec>../carservice/src/main/resources/car-service-contract.yaml</inputSpec>
                            <configOptions>
                                <serializationLibrary>jackson</serializationLibrary>
                                <useJakartaEe>true</useJakartaEe> <!-- Jakarta config not working, Create client/dto's manually -->
                                <interfaceOnly>false</interfaceOnly>
                                <serializableModel>true</serializableModel>
                                <sourceFolder>src/gen/main/java</sourceFolder>
                                <modelPackage>nl.sogeti.gatewayapi.di.carservice.dto</modelPackage>
<!--                                <apiPackage>nl.sogeti.gatewayapi.di.carservice.client</apiPackage>-->
                            </configOptions>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generate rest client leaserate</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <generatorName>java</generatorName>
                            <library>microprofile</library>
                            <modelPackage>true</modelPackage>
                            <generateApis>true</generateApis> <!-- Jakarta config not working, Create client/dto's manually -->
                            <generateSupportingFiles>true</generateSupportingFiles>
                            <generateApiTests>false</generateApiTests>
                            <generateModelTests>false</generateModelTests>
                            <inputSpec>../leaserateservice/src/main/resources/leaserate-service-contract.yaml</inputSpec>
                            <configOptions>
                                <serializationLibrary>jackson</serializationLibrary>
                                <useJakartaEe>true</useJakartaEe> <!-- Jakarta config not working, Create client/dto's manually -->
                                <interfaceOnly>false</interfaceOnly>
                                <serializableModel>true</serializableModel>
                                <sourceFolder>src/gen/main/java</sourceFolder>
                                <modelPackage>nl.sogeti.gatewayapi.di.leaserateservice.dto</modelPackage>
                                <apiPackage>nl.sogeti.gatewayapi.di.leaserateservice.client</apiPackage>
                            </configOptions>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.google.code.maven-replacer-plugin</groupId>
                <artifactId>maven-replacer-plugin</artifactId>
                <version>1.4.1</version>
                <executions>
                    <execution>
                        <id>workaround fix imports in rest client class</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>replace</goal>
                        </goals>
                        <configuration>
                            <basedir>
                                ${project.build.directory}/generated-sources/openapi/src/gen/main/java
                            </basedir>
                            <includes>
                                <include>**/*.java</include>
                            </includes>
                            <replacements>
                                <replacement>
                                    <token>javax</token>
                                    <value>jakarta</value>
                                </replacement>
                                <replacement>
                                    <token>import org.apache.cxf.jaxrs.ext.multipart.*;</token>
                                    <value />
                                </replacement>
                            </replacements>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>native</id>
            <activation>
                <property>
                    <name>native</name>
                </property>
            </activation>
            <properties>
                <skipITs>false</skipITs>
                <quarkus.native.enabled>true</quarkus.native.enabled>
            </properties>
        </profile>
    </profiles>
</project>
