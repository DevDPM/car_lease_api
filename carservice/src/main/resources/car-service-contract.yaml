openapi: 3.0.3
info:
  title: Car service
  description: REST Entity service about car details
  version: 0.1.0
paths:
  '/cars/{id}':
    get:
      tags:
        - cars
      summary: Retrieve car details
      operationId: get
      parameters:
        - name: id
          in: path
          description: id of car
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarDetails'
        "404":
          description: Not Found
    put:
      tags:
        - cars
      summary: Retrieve car details
      operationId: update
      parameters:
        - name: id
          in: path
          description: id of car
          required: true
          schema:
            type: integer
      requestBody:
        description: Update car by id
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarDetails'
      responses:
        "204":
          description: No Content
    delete:
      tags:
        - cars
      summary: Retrieve car details
      operationId: delete
      parameters:
        - name: id
          in: path
          description: id of car
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  '/cars':
    get:
      tags:
        - cars
      summary: Retrieve all cars details
      operationId: getAll
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarDetails'
    post:
      tags:
        - cars
      summary: Retrieve all cars details
      operationId: create
      requestBody:
        description: Update car by id
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarDetails'
      responses:
        "201":
          description: Created
          headers:
            Location:
              schema:
                type: string
                format: uri
              description: The URI to the newly created example
        "409":
          description: Conflict


components:
  schemas:
    CarsDetails:
      type: object
      properties:
        cars:
          type: array
          items:
            $ref: '#/components/schemas/CarDetails'
    CarDetails:
      type: object
      properties:
        make:
          type: string
        model:
          type: string
        version:
          type: string
        numberOfDoors:
          type: integer
        carbonDioxideEmission:
          type: number
        gross:
          type: number
        nett:
          type: number